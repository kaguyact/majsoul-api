version: '3.8'

services:
  nginx:
    build:
      context: .
      target: frontend
    networks:
      - ingress_link
      - default
    image: majsoul-nginx

  riichi-connector:
    build:
      context: .
      target: backend
    image: majsoul-api
    depends_on:
      - "mongo"
    secrets:
      - majsoul.json
    env_file:
      - ./majsoul.env
    entrypoint: ["node", "dist/connector.js"]

  riichi-rest:
    build:
      context: .
      target: backend
    image: majsoul-api
    depends_on:
      - "mongo"
    secrets:
      - majsoul.json
      - riichi.key.pem
      - riichi.crt.pem
    entrypoint: ["node", "dist/rest-api.js"]

  mongo:
    restart: always
    image: mongo:4.2
    hostname: riichi-mongo
    command: ["--replSet", "main", "--bind_ip_all"]
    volumes:
      - mongo-db-data:/data/db
    secrets:
      - mongo-creds
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $$(cat $${MONGO_INITDB_ROOT_PASSWORD_FILE}) --quiet) -eq 1
      interval: 10s
      start_period: 60s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo-creds

secrets:
  mongo-creds:
    file: ./mongo-creds
  majsoul.json:
    file: ./secrets.json
  riichi.key.pem:
    file: ./riichi.key.pem
  riichi.crt.pem:
    file: ./riichi.crt.pem

volumes:
  mongo-db-data:

networks:
  ingress_link:
    external: true
